#############################################################################
# Makefile for building: AssasinBT
# Generated by qmake (2.01a) (Qt 4.5.2) on: Thu Apr 15 10:32:34 2010
# Project:  AssasinBT.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -spec /usr/share/qt4/mkspecs/linux-g++ -unix CONFIG+=debug -o Makefile AssasinBT.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_XML_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -std=c++0x -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtXml -I/usr/include/qt4 -I../PKFM -I../Blowfish -I../SRNL -I. -I.
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)  -L/usr/lib -L../PKFM -lPKFM -L../Blowfish -lBlowfish -L../SRNL -lSRNL -lboost_system-mt -lboost_thread-mt -lQtXml -lQtGui -lQtCore -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		mainwindow.cpp \
		dlgpreference.cpp \
		srvlistclient.cpp \
		client_state_version.cpp \
		client_state_handshake.cpp \
		packet/client/packet_login.cpp moc_mainwindow.cpp \
		moc_dlgpreference.cpp
OBJECTS       = main.o \
		mainwindow.o \
		dlgpreference.o \
		srvlistclient.o \
		client_state_version.o \
		client_state_handshake.o \
		packet_login.o \
		moc_mainwindow.o \
		moc_dlgpreference.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		AssasinBT.pro
QMAKE_TARGET  = AssasinBT
DESTDIR       = 
TARGET        = AssasinBT

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_mainwindow.h ui_dlgpreference.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: AssasinBT.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtXml.prl \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -unix CONFIG+=debug -o Makefile AssasinBT.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtXml.prl:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -unix CONFIG+=debug -o Makefile AssasinBT.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/AssasinBT1.0.0 || $(MKDIR) .tmp/AssasinBT1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/AssasinBT1.0.0/ && $(COPY_FILE) --parents mainwindow.h dlgpreference.h srvlistclient.h client_state_version.hpp client_state_handshake.hpp client_state_login.hpp packet/client/packet_login.hpp .tmp/AssasinBT1.0.0/ && $(COPY_FILE) --parents main.cpp mainwindow.cpp dlgpreference.cpp srvlistclient.cpp client_state_version.cpp client_state_handshake.cpp packet/client/packet_login.cpp .tmp/AssasinBT1.0.0/ && $(COPY_FILE) --parents mainwindow.ui dlgpreference.ui .tmp/AssasinBT1.0.0/ && (cd `dirname .tmp/AssasinBT1.0.0` && $(TAR) AssasinBT1.0.0.tar AssasinBT1.0.0 && $(COMPRESS) AssasinBT1.0.0.tar) && $(MOVE) `dirname .tmp/AssasinBT1.0.0`/AssasinBT1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/AssasinBT1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp moc_dlgpreference.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp moc_dlgpreference.cpp
moc_mainwindow.cpp: mainwindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_dlgpreference.cpp: dlgpreference.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) dlgpreference.h -o moc_dlgpreference.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h ui_dlgpreference.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h ui_dlgpreference.h
ui_mainwindow.h: mainwindow.ui
	/usr/bin/uic-qt4 mainwindow.ui -o ui_mainwindow.h

ui_dlgpreference.h: dlgpreference.ui
	/usr/bin/uic-qt4 dlgpreference.ui -o ui_dlgpreference.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

main.o: main.cpp mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		dlgpreference.h \
		ui_mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

dlgpreference.o: dlgpreference.cpp dlgpreference.h \
		ui_dlgpreference.h \
		srvlistclient.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dlgpreference.o dlgpreference.cpp

srvlistclient.o: srvlistclient.cpp srvlistclient.h \
		client_state_handshake.hpp \
		client_state_version.hpp \
		client_state_login.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o srvlistclient.o srvlistclient.cpp

client_state_version.o: client_state_version.cpp client_state_version.hpp \
		srvlistclient.h \
		packet/client/packet_login.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o client_state_version.o client_state_version.cpp

client_state_handshake.o: client_state_handshake.cpp client_state_handshake.hpp \
		srvlistclient.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o client_state_handshake.o client_state_handshake.cpp

packet_login.o: packet/client/packet_login.cpp packet/client/packet_login.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o packet_login.o packet/client/packet_login.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_dlgpreference.o: moc_dlgpreference.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_dlgpreference.o moc_dlgpreference.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

