#############################################################################
# Makefile for building: libSOL.a
# Generated by qmake (2.01a) (Qt 4.6.2) on: Sun Jul 4 16:38:51 2010
# Project:  SOL.pro
# Template: lib
# Command: /usr/bin/qmake-qt4 -spec /usr/share/qt4/mkspecs/linux-g++ -unix CONFIG+=debug -o Makefile SOL.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DGLIBCXX_DEBUG
CFLAGS        = -pipe -g -fPIC -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -g -fPIC -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4 -Iinclude -I.
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = src/skill_status.cpp \
		src/object.cpp \
		src/academy.cpp \
		src/party_entry.cpp \
		src/job.cpp \
		src/mastery.cpp \
		src/guild_member.cpp \
		src/mastery_tree.cpp \
		src/item_factory.cpp \
		src/player_property.cpp \
		src/spawnobject.cpp \
		src/coord.cpp \
		src/storage.cpp \
		src/stall.cpp \
		src/union.cpp \
		src/guild.cpp \
		src/skill_buff.cpp \
		src/npc_util.cpp \
		src/market_stock.cpp \
		src/party.cpp \
		src/transport.cpp \
		src/skill_builder.cpp \
		src/skill.cpp \
		src/player.cpp \
		src/npc.cpp \
		src/mob.cpp \
		src/item_property.cpp \
		src/item.cpp \
		src/interactive_npc.cpp \
		src/entity_property.cpp \
		src/character_factory.cpp 
OBJECTS       = skill_status.o \
		object.o \
		academy.o \
		party_entry.o \
		job.o \
		mastery.o \
		guild_member.o \
		mastery_tree.o \
		item_factory.o \
		player_property.o \
		spawnobject.o \
		coord.o \
		storage.o \
		stall.o \
		union.o \
		guild.o \
		skill_buff.o \
		npc_util.o \
		market_stock.o \
		party.o \
		transport.o \
		skill_builder.o \
		skill.o \
		player.o \
		npc.o \
		mob.o \
		item_property.o \
		item.o \
		interactive_npc.o \
		entity_property.o \
		character_factory.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/staticlib.prf \
		/usr/share/qt4/mkspecs/features/static.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		SOL.pro
QMAKE_TARGET  = SOL
DESTDIR       = 
TARGET        = libSOL.a

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET) 

staticlib: $(TARGET)

$(TARGET):  $(OBJECTS) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGET)
	$(AR) $(TARGET) $(OBJECTS)


Makefile: SOL.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/staticlib.prf \
		/usr/share/qt4/mkspecs/features/static.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -unix CONFIG+=debug -o Makefile SOL.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/staticlib.prf:
/usr/share/qt4/mkspecs/features/static.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -unix CONFIG+=debug -o Makefile SOL.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/SOL1.0.0 || $(MKDIR) .tmp/SOL1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/SOL1.0.0/ && $(COPY_FILE) --parents include/utility_function.hpp include/fortress.hpp include/friend.hpp include/skill_area.hpp include/object.hpp include/exchange_window.hpp include/academy.hpp include/quest.hpp include/party_entry.hpp include/hotkey.hpp include/mastery_tree.hpp include/job.hpp include/invitation_type.hpp include/guild_constants.hpp include/skill_requirement.hpp include/npc_list.hpp include/guild_member.hpp include/entity_constants.hpp include/autopot.hpp include/magicoption_property.hpp include/npc_task.hpp include/npc_util.hpp include/item_factory.hpp include/skill_imbue.hpp include/mastery.hpp include/player_property.hpp include/spawnobject.hpp include/skill.hpp include/skill_status.hpp include/skill_builder.hpp include/entity_state.hpp include/coord.hpp include/storage.hpp include/storage_constants.hpp include/skill_attack.hpp include/item.hpp include/stall.hpp include/union.hpp include/item_types.hpp include/dropable_item.hpp include/guild.hpp include/teleport_building.hpp include/skill_buff.hpp include/market_stock.hpp include/party.hpp include/level_property.hpp include/spawn_point.hpp include/building_property.hpp include/shoptab.hpp include/shopgroup.hpp include/shopgood.hpp include/scrapofpackageitem.hpp include/itemprice.hpp include/packageitem.hpp include/entity_property.hpp include/skill_property.hpp include/transport.hpp include/player.hpp include/npc.hpp include/types.hpp include/mob.hpp include/item_property.hpp include/interactive_npc.hpp include/character_factory.hpp include/fortress_property.hpp .tmp/SOL1.0.0/ && $(COPY_FILE) --parents src/skill_status.cpp src/object.cpp src/academy.cpp src/party_entry.cpp src/job.cpp src/mastery.cpp src/guild_member.cpp src/mastery_tree.cpp src/item_factory.cpp src/player_property.cpp src/spawnobject.cpp src/coord.cpp src/storage.cpp src/stall.cpp src/union.cpp src/guild.cpp src/skill_buff.cpp src/npc_util.cpp src/market_stock.cpp src/party.cpp src/transport.cpp src/skill_builder.cpp src/skill.cpp src/player.cpp src/npc.cpp src/mob.cpp src/item_property.cpp src/item.cpp src/interactive_npc.cpp src/entity_property.cpp src/character_factory.cpp .tmp/SOL1.0.0/ && (cd `dirname .tmp/SOL1.0.0` && $(TAR) SOL1.0.0.tar SOL1.0.0 && $(COMPRESS) SOL1.0.0.tar) && $(MOVE) `dirname .tmp/SOL1.0.0`/SOL1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/SOL1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

skill_status.o: src/skill_status.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o skill_status.o src/skill_status.cpp

object.o: src/object.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o object.o src/object.cpp

academy.o: src/academy.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o academy.o src/academy.cpp

party_entry.o: src/party_entry.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o party_entry.o src/party_entry.cpp

job.o: src/job.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o job.o src/job.cpp

mastery.o: src/mastery.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mastery.o src/mastery.cpp

guild_member.o: src/guild_member.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o guild_member.o src/guild_member.cpp

mastery_tree.o: src/mastery_tree.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mastery_tree.o src/mastery_tree.cpp

item_factory.o: src/item_factory.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o item_factory.o src/item_factory.cpp

player_property.o: src/player_property.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o player_property.o src/player_property.cpp

spawnobject.o: src/spawnobject.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o spawnobject.o src/spawnobject.cpp

coord.o: src/coord.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o coord.o src/coord.cpp

storage.o: src/storage.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o storage.o src/storage.cpp

stall.o: src/stall.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o stall.o src/stall.cpp

union.o: src/union.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o union.o src/union.cpp

guild.o: src/guild.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o guild.o src/guild.cpp

skill_buff.o: src/skill_buff.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o skill_buff.o src/skill_buff.cpp

npc_util.o: src/npc_util.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o npc_util.o src/npc_util.cpp

market_stock.o: src/market_stock.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o market_stock.o src/market_stock.cpp

party.o: src/party.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o party.o src/party.cpp

transport.o: src/transport.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o transport.o src/transport.cpp

skill_builder.o: src/skill_builder.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o skill_builder.o src/skill_builder.cpp

skill.o: src/skill.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o skill.o src/skill.cpp

player.o: src/player.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o player.o src/player.cpp

npc.o: src/npc.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o npc.o src/npc.cpp

mob.o: src/mob.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mob.o src/mob.cpp

item_property.o: src/item_property.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o item_property.o src/item_property.cpp

item.o: src/item.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o item.o src/item.cpp

interactive_npc.o: src/interactive_npc.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o interactive_npc.o src/interactive_npc.cpp

entity_property.o: src/entity_property.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o entity_property.o src/entity_property.cpp

character_factory.o: src/character_factory.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o character_factory.o src/character_factory.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

